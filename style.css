document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabPanes = document.querySelectorAll('.tab-pane');

    function activateTab(targetTabId) {
        // Pause semua video di semua slider saat tab diganti
        document.querySelectorAll('.video-slider video').forEach(video => {
            if (!video.paused) {
                video.pause();
            }
        });
        // Pause semua model Sketchfab (jika API memungkinkan, atau setidaknya iframe-nya)
        // Untuk iframe Sketchfab, tidak ada cara standar untuk pause via JS dari parent kecuali reload.
        // Cukup pastikan tidak autoplay berlebihan.

        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabPanes.forEach(pane => {
            pane.style.display = 'none';
            pane.classList.remove('active');
        });

        const targetButton = document.querySelector(`.tab-button[data-tab="${targetTabId}"]`);
        const targetPane = document.getElementById(targetTabId);

        if (targetButton && targetPane) {
            targetButton.classList.add('active');
            targetPane.style.display = 'block';
            targetPane.classList.add('active');

            // Jika tab yang diaktifkan memiliki slider, pastikan slide pertama terlihat benar
            // dan tombol navigasi diupdate (terutama jika ada inisialisasi ulang)
            if (targetPane.querySelector('.video-slider')) {
                const sliderId = targetPane.querySelector('.video-slider').dataset.sliderId;
                // Jika ada fungsi untuk re-init atau refresh slider, panggil di sini
                // Untuk implementasi ini, showSlide(0) pada slider yang relevan mungkin cukup
                // atau panggil initializeSlider lagi jika lebih mudah
                const sliderInstance = window.activeSliders && window.activeSliders[sliderId];
                if (sliderInstance) {
                     sliderInstance.showSlide(sliderInstance.getCurrentSlideIndex());
                }
            }
        }
    }

    let defaultActiveTabId = null;
    tabButtons.forEach(button => {
        if (button.classList.contains('active')) {
            defaultActiveTabId = button.dataset.tab;
        }
    });

    if (defaultActiveTabId) {
        activateTab(defaultActiveTabId);
    } else if (tabButtons.length > 0) {
        activateTab(tabButtons[0].dataset.tab);
    }

    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            activateTab(this.dataset.tab);
        });
    });

    const yearSpan = document.getElementById('currentYear');
    if (yearSpan) {
        yearSpan.textContent = new Date().getFullYear();
    }

    // --- LOGIKA SLIDER BARU ---
    window.activeSliders = {}; // Untuk menyimpan instance slider

    function initializeSlider(sliderId) {
        const sliderContainer = document.querySelector(`.video-slider[data-slider-id="${sliderId}"]`);
        if (!sliderContainer) {
            // console.warn(`Slider container for ID "${sliderId}" not found.`);
            return;
        }

        const slides = Array.from(sliderContainer.querySelectorAll('.gallery-item'));
        const prevButton = document.querySelector(`.slider-button.prev[data-controls="${sliderId}"]`);
        const nextButton = document.querySelector(`.slider-button.next[data-controls="${sliderId}"]`);
        let currentSlideIndex = 0;

        if (!slides.length) {
            // console.warn(`No slides found for slider ID "${sliderId}".`);
            if(prevButton) prevButton.style.display = 'none';
            if(nextButton) nextButton.style.display = 'none';
            return;
        }
        
        if (slides.length <= 1) {
            if(prevButton) prevButton.style.display = 'none';
            if(nextButton) nextButton.style.display = 'none';
            slides[0].classList.add('active-slide'); // Pastikan slide tunggal terlihat
            return;
        }

        function showSlide(index) {
            slides.forEach((slide, i) => {
                slide.classList.remove('active-slide');
                const video = slide.querySelector('video');
                if (video && !video.paused && i !== index) { // Pause video jika tidak di slide aktif
                    video.pause();
                }
            });
            slides[index].classList.add('active-slide');
            currentSlideIndex = index;

            if (prevButton) prevButton.disabled = (index === 0);
            if (nextButton) nextButton.disabled = (index === slides.length - 1);
        }

        if (nextButton) {
            nextButton.addEventListener('click', () => {
                if (currentSlideIndex < slides.length - 1) {
                    showSlide(currentSlideIndex + 1);
                }
            });
        }

        if (prevButton) {
            prevButton.addEventListener('click', () => {
                if (currentSlideIndex > 0) {
                    showSlide(currentSlideIndex - 1);
                }
            });
        }

        // Inisialisasi: Tampilkan slide pertama
        showSlide(0);

        // Simpan instance untuk referensi jika perlu
        window.activeSliders[sliderId] = {
            showSlide,
            getCurrentSlideIndex: () => currentSlideIndex
        };
    }

    // Inisialisasi semua slider yang ada di halaman
    initializeSlider('animation-slider');
    initializeSlider('editing-slider');

    console.log("Sistem tab, footer, dan slider siap!");
});
